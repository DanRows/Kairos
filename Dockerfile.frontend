# Build stage
FROM rust:1.82-slim as builder

# Instala dependencias necesarias
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Instala wasm-pack y wasm-bindgen-cli usando cargo (más robusto)
RUN cargo install wasm-pack
RUN cargo install wasm-bindgen-cli

WORKDIR /app

# Copia solo los archivos de dependencias primero
COPY frontend/Cargo.toml ./Cargo.toml
COPY frontend/Cargo.lock ./Cargo.lock
COPY shared/Cargo.toml ../shared/Cargo.toml
COPY shared_types/Cargo.toml ../shared_types/Cargo.toml

# Construye dependencias (esto se cachea si no cambian los toml)
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build --release || true

# Ahora copia el resto del código fuente
COPY frontend/. .
COPY shared ../shared
COPY shared_types ../shared_types

# Compila el frontend a WASM (Dioxus Web)
RUN wasm-pack build --release --target web --out-dir ./dist

# Copia archivos públicos (index.html, styles.css, etc.)
RUN cp -r public/* dist/

# Runtime stage
FROM nginx:alpine
COPY --from=builder /app/dist /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"] 